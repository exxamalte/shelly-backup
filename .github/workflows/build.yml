name: Build

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    outputs:
      release_url: ${{ steps.release_url.outputs.release_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: ${{ contains( github.ref_name, 'b' ) }}
    - name: Output Release URL
      id: release_url
      run: echo "release_url=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_OUTPUT

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: linux
            ARCH: x64
            PYARCH: x64
            CMD_BUILD: >
                pyinstaller cli.spec &&
                cd dist/ &&
                tar cfz shellybackup.tar.gz shellybackup
            OUT_FILE_NAME: shellybackup.tar.gz
            ASSET_MIME: application/gzip
          - os: ubuntu-24.04-arm
            TARGET: linux
            ARCH: arm64
            PYARCH: arm64
            CMD_BUILD: >
                pyinstaller cli.spec &&
                cd dist/ &&
                tar cfz shellybackup.tar.gz shellybackup
            OUT_FILE_NAME: shellybackup.tar.gz
            ASSET_MIME: application/gzip
    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - name: Set up Python 3.13
      uses: actions/setup-python@v6
      with:
        python-version: 3.13
        architecture: ${{ matrix.PYARCH }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .
    - name: Write release version
      id: version
      run: |
        VERSION=${GITHUB_REF_NAME#v}
        echo Version: $VERSION
        echo "version_number=$VERSION" >> $GITHUB_OUTPUT
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.createrelease.outputs.release_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
        asset_name: shellybackup-${{steps.version.outputs.version_number}}-${{ matrix.TARGET }}-${{ matrix.ARCH }}.tar.gz
        asset_content_type: ${{ matrix.ASSET_MIME}}
